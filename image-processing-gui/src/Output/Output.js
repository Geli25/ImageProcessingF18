import React, { Component, Fragment} from 'react';
import {Redirect} from 'react-router-dom';
import axios from 'axios';
import {connect} from 'react-redux';

import * as actionCreators from '../store/actions/userInfo';
import * as actionCreator from '../store/actions/returnedData';
import './icono.min.css';
import Loader from '../UI/Loader';
import {Badge} from 'reactstrap';
import Results from './Stateful/Results';

class Output extends Component {
    state={
        loading:false
    }

    componentWillMount(){
        if (this.props.sentStatus&&!this.props.hasData){
            console.log("initializing get data")
            this.retrieveData();
        }
    }

    componentDidMount(){
        this.props.setRedirect(false);
    }

    processImages=(imagePairs,fileNames)=>{
        let modifiedPairs=[];
        let fileTypes=[".jpeg",".png","tiff"];
        for (let pair of imagePairs){
            let index=imagePairs.indexOf(pair);
            let type = fileNames[index].substr(fileNames[index].indexOf('.'));
            let modifiedPair = [];

            // Attaching the first image
            let cut0 = pair[0].substring(2);
            let img64 = "data:image/" + type + ";base64," + cut0
            modifiedPair.push(img64);

            //Attaching the array of diff processed file formats
            let modTypes=[];
            for (let types of pair[1]){
                let typeIndex = pair[1].indexOf(types);
                let formattype=fileTypes[typeIndex];
                let cutTypes = types.substring(2);
                let img64Types = "data:image/"+formattype+";base64," + cutTypes
                modTypes.push(img64Types);
            }
            modifiedPair.push(modTypes);
            modifiedPairs.push(modifiedPair);
        }
        console.log(modifiedPairs);
        this.props.updateImagePairs(modifiedPairs);
    }

    retrieveData=()=>{
        this.setState({ loading: true }, () => {
            setTimeout(() => {
                this.setState({ loading: false });
                const pairs = [["b'",
                    ["b'"]],
                ["b'",
                    ["b'"]]]
                
                
                const imageNames = ["lady.tiff", "cat.jpeg"];

                const rawData = Array(100).fill().map(Math.random);
                const rawData1 = Array(100).fill().map(Math.random);
                const rawData2 = Array(100).fill().map(Math.random);
                const rawData3 = Array(100).fill().map(Math.random);


                const histograms = [[[rawData, rawData1, rawData2], rawData3],[[rawData1, rawData, rawData2], rawData3]]

                this.props.updateImageNames(imageNames);
                this.props.updateHistograms(histograms);
                this.props.updateImageSizes([["500px","500px"], ["200px","250px"]]);
                this.props.updateProcessingTime("2 minutes");
                this.processImages(pairs, imageNames);
                this.props.gotData(true);
            }, 1000);
        });
        // axios.get('http://127.0.0.1:5000/'+this.props.uuid)
        //     .then(response=>{
        //         if (response.uuid===this.props.uuid){
        //             this.updateImageNames(response.file_name);
        //             this.processImages(response.img_pair,response.file_name);
        //             this.updateImageSizes(response.img_size);
        //             this.updateProcessingTime(response.processed_time);
        //             this.props.updateHistograms(response.histograms);
        //             this.setState({loading:false},()=>{
        //                 this.props.gotData(true);
        //             });
        //         }
        //     })
        //     .catch(err=>{
        //         alert("Error:"+err)
        //     })
    }

    render() {
        let content = (
            <Fragment>
            <br />
            <h4>Upload files from the "Input" page to begin</h4>
            </Fragment>
        )
        if (this.props.sentStatus&&this.state.loading){
            content=(
                <Fragment>
                    <br />
                    <h4>Getting your data...</h4>
                    <p><b>Please do not navigate to another page</b></p>
                    <Loader />
                </Fragment>
            );
        }
        else if (this.props.sentStatus && !this.state.loading && this.props.hasData){
            content=null;
        }
        if (this.props.resetRedirect){
            content=<Redirect to="/" />
        }
        return (
            <div>
                {this.props.sentStatus 
                    && !this.state.loading 
                    ? <Fragment>
                        <br />
                        <div className="icono-reset" size="20px" onClick={this.retrieveData} />
                      </Fragment> : null}
                {content}
                {this.props.sentStatus
                    &&!this.state.loading 
                    ? <Fragment>
                        <br />
                        <Badge className="refresh" color="dark" href="" onClick={this.retrieveData}>Click icon to refresh results</Badge>
                        <Results />
                      </Fragment> 
                    : null}
            </div>
        );
    }
}

const mapStatetoProps=reduxState=>{
    return{
        uuid:reduxState.userInfo.uuid,
        sentStatus:reduxState.userInfo.sent,
        resetRedirect: reduxState.userInfo.resetRedirect,
        hasData:reduxState.userInfo.gotData,
    }
}

const mapDispatchtoProps=dispatch=>{
    return{
        setRedirect:(bool)=>dispatch(actionCreators.setRedirect(bool)),
        gotData:(bool)=>dispatch(actionCreators.gotData(bool)),
        updateImagePairs:(pairs)=>dispatch(actionCreator.updateImagePairs(pairs)),
        updateImageSizes: (sizes) => dispatch(actionCreator.updateImageSizes(sizes)),
        updateProcessingTime:(time)=>dispatch(actionCreator.updateProcessingTime(time)),
        updateImageNames:(names)=>dispatch(actionCreator.updateImageNames(names)),
        updateHistograms:(histograms)=>dispatch(actionCreator.updateHistograms(histograms))
    }
}

export default connect(mapStatetoProps,mapDispatchtoProps)(Output);